#include<stdio.h>
#include<stdlib.h>

int main(void) {
	int list[5];
	int *plist[5] = { NULL, };  // int *형의 배열을 전부 빈공간으로 초기화

	plist[0] = (int *)malloc(sizeof(int));  // plist[0]에 sizeof(int)만큼 동적 할당
	list[0] = 1;
	list[1] = 100;
	*plist[0] = 200;
	printf("2019038068 Kim Soung Uook\n\n");
	printf("value of list[0]          =%d\n", list[0]);     //list[0]의 값, 즉 1
	printf("address of list[0]        =%p\n", &list[0]);    //list[0]의 주솟값
	printf("value of list             =%p\n", list);        //list의 값, 즉 list[0]의 주솟값
	printf("address of list (&list)   =%p\n", &list);       //list의 주솟값

	printf("--------------------------------------------------\n\n");
	printf("value of list[1]          =%d\n", list[1]);     //list[1]의 값, 즉 100
	printf("address of list[1]        =%d\n", &list[1]);    //list[1]의 주솟값
	printf("value of *(list+1)        =%d\n", *(list + 1)); //list[1]의 값, 즉 100
	printf("address of list+1         =%d\n", list + 1);    //list[1]의 주솟값

	printf("--------------------------------------------------\n\n");
	printf("value of *plist[0]        =%d\n", *plist[0]);   //*plist[0]의 값, 즉 200
	printf("&plist[0]                 =%p\n", &plist[0]);   //plist[0]의 주솟값
	printf("&plist                    =%p\n", &plist);      //plist의 주솟값
	printf("plist                     =%p\n", plist);       //plist의 값, 즉 plist[0]의 주솟값
	printf("plist[0]                  =%p\n", plist[0]);
	printf("plist[1]                  =%p\n", plist[1]);    // 비어있다
	printf("plist[2]                  =%p\n", plist[2]);    // 비어있다
	printf("plist[3]                  =%p\n", plist[3]);    // 비어있다
	printf("plist[4]                  =%p\n", plist[4]);    // 비어있다

	free(plist[0]);
}


